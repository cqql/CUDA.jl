env:
  SECRET_CODECOV_TOKEN: "Z8bySNFK8GunYMBwJRDp/4s1gKQ2eDT4MCR6VFKwb/8p7lKOq/BPLibigT+VDzUTAiH4TUN8vkEuSkA7kUJvraHtWx4wO78vlSH86BBC6fuPW3Lhfwtn2P4zxEzdR9kQYkrtfYdffpQw/cvgNCk1klpR9wu3avoc6ZOzsvg9gLGlD4QaTMcVxnZ1+8QUapWgPo/kUUwMxoqHvV81GFCWvWTA6obEtIrchrK1gq+7TGJQtL57zlFhk2X4h1roj08mF6MfvWB+rlzHGTISlu3Rn90KVD9WO2A1qvLs+QO8zIucbJdHmbxafX9TpopGmB3c+nOhROWG/USXwm9TUSjqEw=="

steps:
  # Julia versions

  - label: "Julia 1.5"
    plugins:
      - JuliaCI/julia#v0.2:
          version: 1.5
      - JuliaCI/julia-test#v0.2: ~
      - JuliaCI/julia-coverage#v0.2:
          codecov: true
          dirs:
            - src
            - lib
            - examples
    agents:
      queue: "juliagpu"
      cuda: "*"

  - label: "Julia 1.5 (debug)"
    plugins:
      - JuliaCI/julia#v0.2:
          version: 1.5
      - JuliaCI/julia-test#v0.2:
          julia_args: "-g2"
      - JuliaCI/julia-coverage#v0.2:
          codecov: true
          dirs:
            - src
            - lib
            - examples
    agents:
      queue: "juliagpu"
      cuda: "*"


    # CUDA versions

    # NOTE: we support those CUDA versions for which the latest cuDNN is available
    #       https://developer.nvidia.com/rdp/cudnn-archive

    # NOTE: we make sure to run all tests on CUDA versions that have CUDNN & CUTENSOR
    #       by setting the CI_THOROUGH environment variable, and using a recent GPU.

  - label: "CUDA 11.1"
    plugins:
      - JuliaCI/julia#v0.2:
          version: 1.5
      - JuliaCI/julia-test#v0.2: ~
      - JuliaCI/julia-coverage#v0.2:
          codecov: true
          dirs:
            - src
            - lib
            - examples
    agents:
      queue: "juliagpu"
      cuda: "11.1"
      cap: "recent"
    env:
      CI_THOROUGH: 'true'
      JULIA_CUDA_VERSION: '11.1'
      JULIA_CUDA_USE_BINARYBUILDER: 'true'

  - label: "CUDA 11.0"
    plugins:
      - JuliaCI/julia#v0.2:
          version: 1.5
      - JuliaCI/julia-test#v0.2: ~
      - JuliaCI/julia-coverage#v0.2:
          codecov: true
          dirs:
            - src
            - lib
            - examples
    agents:
      queue: "juliagpu"
      cuda: "11.0"
      cap: "recent"
    env:
      CI_THOROUGH: 'true'
      JULIA_CUDA_VERSION: '11.0'
      JULIA_CUDA_USE_BINARYBUILDER: 'true'

  - label: "CUDA 10.2"
    plugins:
      - JuliaCI/julia#v0.2:
          version: 1.5
      - JuliaCI/julia-test#v0.2: ~
      - JuliaCI/julia-coverage#v0.2:
          codecov: true
          dirs:
            - src
            - lib
            - examples
    agents:
      queue: "juliagpu"
      cuda: "10.2"
      cap: "recent"
    env:
      CI_THOROUGH: 'true'
      JULIA_CUDA_VERSION: '10.2'
      JULIA_CUDA_USE_BINARYBUILDER: 'true'

  - label: "CUDA 10.1"
    plugins:
      - JuliaCI/julia#v0.2:
          version: 1.5
      - JuliaCI/julia-test#v0.2: ~
      - JuliaCI/julia-coverage#v0.2:
          codecov: true
          dirs:
            - src
            - lib
            - examples
    agents:
      queue: "juliagpu"
      cuda: "10.1"
      cap: "recent"
    env:
      CI_THOROUGH: 'true'
      JULIA_CUDA_VERSION: '10.1'
      JULIA_CUDA_USE_BINARYBUILDER: 'true'


    # special tests

  - label: "No memory pool"
    plugins:
      - JuliaCI/julia#v0.2:
          version: 1.5
      - JuliaCI/julia-test#v0.2: ~
      - JuliaCI/julia-coverage#v0.2:
          codecov: true
          dirs:
            - src
            - lib
            - examples
    agents:
      queue: "juliagpu"
      cuda: "*"
    env:
      JULIA_CUDA_MEMORY_POOL: 'none'

  - label: "Simple memory pool"
    plugins:
      - JuliaCI/julia#v0.2:
          version: 1.5
      - JuliaCI/julia-test#v0.2: ~
      - JuliaCI/julia-coverage#v0.2:
          codecov: true
          dirs:
            - src
            - lib
            - examples
    agents:
      queue: "juliagpu"
      cuda: "*"
    env:
      JULIA_CUDA_MEMORY_POOL: 'simple'

  - label: "Split memory pool"
    plugins:
      - JuliaCI/julia#v0.2:
          version: 1.5
      - JuliaCI/julia-test#v0.2: ~
      - JuliaCI/julia-coverage#v0.2:
          codecov: true
          dirs:
            - src
            - lib
            - examples
    agents:
      queue: "juliagpu"
      cuda: "*"
    env:
      JULIA_CUDA_MEMORY_POOL: 'split'
